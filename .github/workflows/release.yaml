name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      published: ${{ steps.publish-output.outputs.published }}
      publishedPackages: ${{ steps.publish-output.outputs.publishedPackages }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json

      - name: Install Dependencies
        run: npm ci

      - name: Version Packages & Create Tags
        id: changesets
        uses: changesets/action@v1
        with:
          version: npx changeset version
          publish: npx changeset tag
          commit: 'Publish Release'
          title: 'Publish Release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Job Outputs
        id: publish-output
        run: |
          # Workaround: intermediate variable prevents shell quoting issues
          # that interfere with fromJson deserialization
          publishedPackages=${{ toJSON(steps.changesets.outputs.publishedPackages) }}

          echo 'published=${{ steps.changesets.outputs.published }}' >> "$GITHUB_OUTPUT"
          echo "publishedPackages=$publishedPackages" >> "$GITHUB_OUTPUT"

  upload:
    name: Upload Binaries
    needs: [release]
    if: needs.release.outputs.published == 'true'
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        package: ${{ fromJson(needs.release.outputs.publishedPackages) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: npm ci

      - name: Upload Binaries
        run: |
          npm run build

          tar czf ./dist/boil-node-22.tgz ./dist/boil.cjs

          tag="v${{ matrix.package.version }}"
          gh release upload "$tag" ./dist/*.tgz \
            --repo="$GITHUB_REPOSITORY" \
            --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
